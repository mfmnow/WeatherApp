
@{
    ViewBag.Title = "Weather Inquiry Form";
}
@model IAsset.Tests.MFM.Contracts.IHomeViewModel

<div class="container">
    <h1 class="well">Weather Inquiry Form</h1>
    <div class="col-lg-12 well">
        <div class="row">
            <form>
                <div class="col-sm-12">
                    <div class="row">
                        <div class="col-sm-12 form-group">
                            <label>Select Country</label>
                            @Html.DropDownList("Country", new SelectList(Model.Countries, "Value", "Value"), new { @class = "form-control", onchange= "IAsset.MFM.ShowHideCity();" })
                        </div>
                    </div>  
                    <div class="row" id="CityRow" style="display:none;">
                        <div class="col-sm-12 form-group">
                            <label>Select City</label>
                            <select id="City" class="form-control"></select>
                            <div id="CitiesLoading">Loading Cities...</div>
                        </div>
                    </div>  
                </div>
            </form>
        </div>
    </div>
</div>

@section PageSpecificJS
{
    <script>
        window.IAsset = window.IAsset || {};
        IAsset.MFM = function (MFM, $) {
            MFM.ShowHideCity = function () {
                $('#City option').remove();
                $('#City').hide();
                $('#CitiesLoading').show(200);
                $.ajax({
                    url: "/api/GetCities/" + encodeURIComponent($("#Country").val()),
                    success: function (result) {
                        result = JSON.parse(result).NewDataSet;
                        console.log(result.Table)
                        if (result.Table) {
                            $('<option/>').val("").html("Select City...").appendTo('#City');
                            if (result.Table.length) {
                                for (var i = 0; i < result.Table.length; i++) {
                                    $('<option/>').val(result.Table[i].City).html(result.Table[i].City).appendTo('#City');
                                }
                            }
                            else
                                $('<option/>').val(result.Table.City).html(result.Table.City).appendTo('#City');
                        }
                        else
                            $('<option/>').val("").html("[No Cities defined for this country]").appendTo('#City');
                        
                        $('#CitiesLoading').hide();
                        $('#City').show(200);
                    },
                    error: function (result) {
                        alert("error");
                    }
                });
                if ($("#Country").val() != "")
                    $("#CityRow").show(300);
                else
                    $("#CityRow").hide(300);
            };
            return MFM;
        }(IAsset.MFM = IAsset.MFM || {}, jQuery);
    </script>
}

